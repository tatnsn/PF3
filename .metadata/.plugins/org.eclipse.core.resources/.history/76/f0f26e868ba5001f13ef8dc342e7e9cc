<!DOCTYPE html>
<html lang="ja" xmlns:th="http://www.thymeleaf.org">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>月のいいねランキング</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <style>
        .ranking-container {
            margin: 20px auto;
            max-width: 800px;
        }

        .ranking-item {
            display: flex;
            align-items: center;
            justify-content: space-between;
            border-bottom: 1px solid #ddd;
            padding: 10px 0;
        }

        .ranking-item img {
            border-radius: 50%;
            width: 50px;
            height: 50px;
            margin-right: 15px;
        }

        .ranking-item .details {
            flex: 1;
        }

        .ranking-item .rank {
            font-weight: bold;
            margin-right: 15px;
        }

        @media (max-width: 576px) {
            .ranking-item {
                flex-direction: column;
                align-items: flex-start;
            }

            .ranking-item img {
                margin-bottom: 10px;
            }

            .ranking-item button {
                margin-top: 10px;
            }
        }
    </style>
    <script th:inline="javascript">
        /*<![CDATA[*/
        var csrfToken = /*[[@{${_csrf.token}}]]*/ 'null';
        /*]]>*/
    </script>
</head>
<body class="bg-light">
    <div class="container ranking-container">
        <h1 class="text-center">月のいいねランキング</h1>

        <!-- 月変更フォーム -->
        <div class="text-center mb-4">
            <form id="month-form" action="/public/ranking" method="get" class="d-inline-flex align-items-center">
                <label for="month" class="me-2">月を選択：</label>
                <input type="number" id="month" name="month" min="1" max="12" value="1" class="form-control me-2" style="width: 80px;">
                <button type="submit" class="btn btn-primary">表示</button>
            </form>
        </div>

        <!-- ランキングリスト -->
        <div id="rankingList" class="list-group">
            <p th:if="${message}" th:text="${message}" class="text-center text-danger"></p>
            <ul class="list-group">
                <th:block th:each="account, iterStat : ${accounts}">
                    <li class="list-group-item ranking-item">
                        <!-- 順位を表示 -->
                        <span class="rank" th:text="${iterStat.index + 1} + '位'">1位</span>
                        <div class="d-flex align-items-center">
                            <img th:src="${account.profileImage}" alt="プロフィール画像">
                            <div class="details">
                                <span th:text="${account.name}">アカウント名</span>
                                <span class="text-muted ms-2">❤️ <span th:text="${account.likes}">0</span></span>
                            </div>
                        </div>
                        <button th:attr="data-account-id=${account.id}" onclick="likeAccount(this)" class="btn btn-outline-primary">
                            ❤️ いいね
                        </button>
                    </li>
                </th:block>
            </ul>
        </div>
        
        <!-- 一般アカウント一覧に戻るリンク -->
        <div class="btn-container">
            <a href="/public/account-list" class="btn btn-secondary">一般アカウント一覧に戻る</a>
        </div>
    </div>

    <script>
        function likeAccount(buttonElement) {
            const accountId = buttonElement.getAttribute("data-account-id");
            const url = `/public/ranking/account/${accountId}/like`;

            fetch(url, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-CSRF-TOKEN': csrfToken
                }
            })
            .then(response => response.json())
            .then(result => {
                if (result.likes !== undefined) {
                    updateRankingList(); // いいね数の更新に成功したらランキングリストを再取得
                } else {
                    alert("エラーが発生しました。もう一度お試しください。");
                }
            })
            .catch(error => console.error("Error:", error));
        }

        function updateRankingList() {
            const month = document.getElementById("month").value;
            fetch(`/public/ranking/data?month=${month}`)
            .then(response => response.json())
            .then(accounts => {
                const rankingList = document.getElementById('rankingList');
                rankingList.innerHTML = ''; // 現在のリストをクリア

                const ulElement = document.createElement('ul');
                ulElement.classList.add('list-group');

                accounts.forEach((account, index) => {
                    const listItem = document.createElement('li');
                    listItem.classList.add('list-group-item', 'ranking-item');
                    listItem.innerHTML = `
                        <span class="rank">${index + 1}位</span>
                        <div class="d-flex align-items-center">
                            <img src="${account.profileImage}" alt="プロフィール画像">
                            <div class="details">
                                <span>${account.name}</span>
                                <span class="text-muted ms-2">❤️ <span id="likes-${account.id}">${account.likes}</span></span>
                            </div>
                        </div>
                        <button data-account-id="${account.id}" onclick="likeAccount(this)" class="btn btn-outline-primary">
                            ❤️ いいね
                        </button>
                    `;
                    ulElement.appendChild(listItem);
                });

                rankingList.appendChild(ulElement); // 更新したリストを追加
            })
            .catch(error => console.error("Error fetching ranking list:", error));
        }

        document.getElementById("month-form").onsubmit = function(event) {
            event.preventDefault();
            updateRankingList(); // 月が変更されたらリストを更新
        };
    </script>
</body>
</html>
