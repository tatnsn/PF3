package com.example.demo.controller;

@Controller
@RequestMapping("/accounts")
public class AccountController {

    @Autowired
    private AccountService accountService;

    @GetMapping
    public String listAccounts(Model model, @RequestParam(defaultValue = "0") int page) {
        Page<Account> accounts = accountService.getAllAccounts(PageRequest.of(page, 5));
        model.addAttribute("accounts", accounts);
        return "accounts/list"; // Thymeleafテンプレートファイル
    }

    @GetMapping("/add")
    public String showAddForm(Model model) {
        model.addAttribute("account", new Account());
        return "accounts/add";
    }

    @PostMapping("/add")
    public String addAccount(@ModelAttribute @Valid Account account, BindingResult result, Model model) {
        if (result.hasErrors()) {
            return "accounts/add";
        }
        accountService.saveAccount(account);
        return "redirect:/accounts";
    }

    @GetMapping("/edit/{id}")
    public String showEditForm(@PathVariable Long id, Model model) {
        Account account = accountService.getAccountById(id);
        model.addAttribute("account", account);
        return "accounts/edit";
    }

    @PostMapping("/edit/{id}")
    public String editAccount(@PathVariable Long id, @ModelAttribute @Valid Account account, BindingResult result, Model model) {
        if (result.hasErrors()) {
            return "accounts/edit";
        }
        accountService.saveAccount(account);
        return "redirect:/accounts";
    }

    @PostMapping("/delete/{id}")
    public String deleteAccount(@PathVariable Long id) {
        accountService.deleteAccount(id);
        return "redirect:/accounts";
    }

    @PostMapping("/toggleStatus/{id}")
    public String toggleStatus(@PathVariable Long id) {
        Account account = accountService.getAccountById(id);
        String newStatus = account.getStatus().equals("allowed") ? "banned" : "allowed";
        accountService.updateAccountStatus(id, newStatus);
        return "redirect:/accounts";
    }
}
