package com.example.demo.config;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.security.web.SecurityFilterChain;

import com.example.demo.constant.UlrConst;

import lombok.RequiredArgsConstructor;

@EnableWebSecurity
@Configuration
@RequiredArgsConstructor
public class WebSecurityConfig {
	
	private final String USERNAME_PARAMETER = "loginId";
	
	@Bean
    public PasswordEncoder passwordEncoder() {
        return new BCryptPasswordEncoder(); // パスワードをBCryptでエンコード
    }
	
	@Bean
	SecurityFilterChain securityFirterChain(HttpSecurity http) throws Exception {

		http
		.authorizeHttpRequests(
				authorize -> authorize.requestMatchers(UlrConst.NO_AUTHENTICATION).permitAll()
					.anyRequest().authenticated())
		.formLogin(
				login -> login.loginPage(UlrConst.LOGIN)
				.usernameParameter(USERNAME_PARAMETER)
				.defaultSuccessUrl(UlrConst.MENU));
		
		return http.build();
	}
 
}
