<!DOCTYPE html>
<html lang="ja" xmlns:th="http://www.thymeleaf.org">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>月のいいねランキング</title>
    <script th:inline="javascript">
        /*<![CDATA[*/
        var csrfToken = /*[[@{${_csrf.token}}]]*/ 'null';
        /*]]>*/
    </script>
</head>
<body>
    <h1>月のいいねランキング</h1>

    <!-- 月変更フォーム -->
    <div>
        <form id="month-form" action="/public/ranking" method="get">
            <label for="month">月を選択：</label>
            <input type="number" id="month" name="month" min="1" max="12" value="1">
            <button type="submit">表示</button>
        </form>
    </div>

    <ul id="account-list">
        <th:block th:each="account : ${accounts}">
            <li>
                <img th:src="${account.profileImage}" alt="プロフィール画像" width="50" height="50"/>
                <span th:text="${account.name}">アカウント名</span>
                <button th:attr="data-account-id=${account.id}" onclick="likeAccount(this)">
                   ❤️ いいね (<span id="likes-${account.id}" th:text="${account.likes}">0</span>)
                </button>
            </li>
        </th:block>
    </ul>

    <script>
    // いいねボタンが押されたときに呼び出される関数
    function likeAccount(buttonElement) {
        const accountId = buttonElement.getAttribute("data-account-id");
        const url = `/public/ranking/account/${accountId}/like`;

        fetch(url, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'X-CSRF-TOKEN': csrfToken
            }
        })
        .then(response => response.json())
        .then(result => {
            if (result.likes !== undefined) {
                // 新しい「いいね」数を該当箇所に反映
                document.getElementById(`likes-${accountId}`).textContent = result.likes;
                // 最新のランキングリストを取得し画面に反映
                updateRankingList();
            } else {
                console.error("エラーが発生しました。もう一度お試しください。");
            }
        })
        .catch(error => console.error("非同期処理エラー:", error));
    }

    // ランキングリストを最新に更新する関数
    function updateRankingList() {
        const month = document.getElementById("month").value;
        fetch(`/public/ranking/latest?month=${month}`)
        .then(response => response.json())
        .then(accounts => {
            let accountListHtml = '';
            accounts.forEach(account => {
                accountListHtml += `
                    <li>
                        <img src="${account.profileImage}" alt="プロフィール画像" width="50" height="50"/>
                        <span>${account.name}</span>
                        <button data-account-id="${account.id}" onclick="likeAccount(this)">
                           ❤️ いいね (<span id="likes-${account.id}">${account.likes}</span>)
                        </button>
                    </li>
                `;
            });
            document.getElementById('account-list').innerHTML = accountListHtml;
        })
        .catch(error => console.error("ランキング更新エラー:", error));
    }
</script>

</body>
</html>
