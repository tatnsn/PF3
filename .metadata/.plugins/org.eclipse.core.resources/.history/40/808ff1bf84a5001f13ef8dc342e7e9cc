<!DOCTYPE html>
<html lang="ja" xmlns:th="http://www.thymeleaf.org">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>アカウント詳細</title>
    <script th:inline="javascript">
        /*<![CDATA[*/
        var csrfToken = /*[[@{${_csrf.token}}]]*/ 'null';
        /*]]>*/
    </script>
</head>
<body>
    <h1>アカウント詳細</h1>

    <div id="accountDetails">
        <h2 th:text="${account.name}">アカウント名</h2>
        <img th:src="${account.profileImage}" alt="プロフィール画像" width="100" height="100"/>
        <!-- ふりがな -->
        <p th:text="'ふりがな: ' + ${account.furigana}">ふりがな: -</p>

        <p th:text="'性別: ' + (#strings.equalsIgnoreCase(account.gender, 'MALE') ? '男性' :
                       #strings.equalsIgnoreCase(account.gender, 'FEMALE') ? '女性' : 'その他')">
    	性別: -
		</p>


        <!-- 年齢 -->
        <p th:text="'年齢: ' + ${account.age} + '歳'">年齢: -</p>

        <!-- 自己紹介 -->
        <p th:text="'自己紹介: ' + ${account.introduction}">自己紹介: -</p>
        <p th:text="'いいね数: ' + ${account.likes}">いいね数: 0</p>
        <button th:attr="data-account-id=${account.id}" onclick="likeAccount(this)">
            ❤️ いいね
        </button>
    </div>

    <script>
        function likeAccount(buttonElement) {
            const accountId = buttonElement.getAttribute("data-account-id");
            const url = `/public/account/${accountId}/like`;
            console.log("Sending request to: " + url);

            fetch(url, { 
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-CSRF-TOKEN': csrfToken // CSRFトークンを送信
                }
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.text();
            })
            .then(result => {
                if (result === 'success') {
                    console.log("Like operation successful for account ID:", accountId);
                    // アカウントの詳細を再取得する処理
                    fetch(`/public/account/${accountId}/details`)
                        .then(response => response.json())
                        .then(account => {
                            const likesElement = document.querySelector(`#accountDetails p`);
                            if (likesElement) {
                                likesElement.innerText = `いいね数: ${account.likes}`; // 最新のいいね数を表示
                            } else {
                                console.error("Likes element not found for account ID:", accountId);
                            }
                        })
                        .catch(error => console.error("Error fetching account details:", error));
                } else {
                    alert("エラーが発生しました: " + result);
                }
            })
            .catch(error => console.error("Error:", error));
        }
    </script>
</body>
</html>
