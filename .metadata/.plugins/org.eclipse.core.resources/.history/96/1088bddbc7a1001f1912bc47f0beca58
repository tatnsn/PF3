<!DOCTYPE html>
<html lang="ja" xmlns:th="http://www.thymeleaf.org">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>月のいいねランキング</title>
    <!-- CSRFトークンをmetaタグに埋め込む -->
    <meta name="csrf-token" content="[[${_csrf.token}]]">
</head>
<body>
    <h1>月のいいねランキング</h1>

    <div>
        <form id="month-form" action="/public/monthly-likes" method="GET">
            <label for="month">月を選択：</label>
            <input type="number" id="month" name="month" min="1" max="12" value="1">
            <button type="submit">表示</button>
        </form>
    </div>

    <div id="accountList">
        <ul>
            <th:block th:each="account : ${accounts}">
                <li>
                    <a th:href="@{/public/account/{id}(id=${account.id})}">
                        <img th:src="${account.profileImage}" alt="プロフィール画像" width="50" height="50"/>
                        <span th:text="${account.name}">名前</span>
                    </a>
                    <button th:attr="data-account-id=${account.id}" onclick="likeAccount(this)">
                        ❤️ いいね (<span id="likes-${account.id}" th:text="${account.likes}">0</span>)
                    </button>
                </li>
            </th:block>
        </ul>
    </div>

    <script>
    // いいねボタンの非同期処理
    function likeAccount(buttonElement) {
        const accountId = buttonElement.getAttribute("data-account-id");
        const url = `/public/account/${accountId}/like`;

        // 非同期リクエストを送信
        fetch(url, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'X-CSRF-TOKEN': csrfToken
            }
        })
        .then(response => {
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }
            return response.text();  // 新しいいいね数を受け取る
        })
        .then(result => {
            if (result !== 'error') {
                // 受け取った新しい「いいね」数で画面を更新
                const likesElement = document.getElementById(`likes-${accountId}`);
                likesElement.textContent = result;  // 新しい「いいね」数を表示
            } else {
                alert("エラーが発生しました。もう一度お試しください。");
            }
        })
        .catch(error => console.error("Error:", error));
    }
</script>



</body>
</html>
