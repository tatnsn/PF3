<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>月のいいねランキング</title>
    <script>
        // CSRFトークンを取得
        var csrfToken = document.querySelector('meta[name="csrf-token"]').getAttribute('content');
    </script>
</head>
<body>
    <h1>月のいいねランキング</h1>

    <div>
        <form id="month-form">
            <label for="month">月を選択：</label>
            <input type="number" id="month" name="month" min="1" max="12" value="1">
            <button type="submit">表示</button>
        </form>
    </div>

    <ul id="account-list">
        <!-- アカウント情報が表示されます -->
        <th:block th:each="account : ${accounts}">
            <li>
                <img th:src="${account.profileImage}" alt="プロフィール画像" width="50" height="50"/>
                <span th:text="${account.name}">アカウント名</span>
                <button th:attr="data-account-id=${account.id}" onclick="likeAccount(this)">
                    ❤️ いいね (<span id="likes-[[${account.id}]]" th:text="${account.likes}">0</span>)
                </button>
            </li>
        </th:block>
    </ul>

    <script>
        // いいねボタンの非同期処理
        function likeAccount(buttonElement) {
            const accountId = buttonElement.getAttribute("data-account-id");
            const url = `/public/account/${accountId}/like`;

            fetch(url, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-CSRF-TOKEN': csrfToken
                }
            })
            .then(response => response.text())
            .then(result => {
                if (result !== 'error') {
                    // 受け取った新しい「いいね」数を表示
                    const likesElement = document.getElementById(`likes-${accountId}`);
                    likesElement.textContent = result;
                } else {
                    alert("エラーが発生しました。もう一度お試しください。");
                }
            })
            .catch(error => console.error("Error:", error));
        }

        // 月選択フォームの非同期送信
        document.getElementById("month-form").addEventListener("submit", function(event) {
            event.preventDefault();
            const month = document.getElementById("month").value;

            // 月を選択してページを更新
            fetch(`/public/monthly-likes?month=${month}`, { method: 'GET' })
                .then(response => response.text())
                .then(result => {
                    // ランキングリスト部分を更新
                    document.getElementById('account-list').innerHTML = result;
                })
                .catch(error => console.error('Error:', error));
        });
    </script>
</body>
</html>
