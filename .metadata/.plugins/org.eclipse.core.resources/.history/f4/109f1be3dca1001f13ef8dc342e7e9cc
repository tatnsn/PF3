<!DOCTYPE html>
<html lang="ja" xmlns:th="http://www.thymeleaf.org">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>月のいいねランキング</title>
    <script th:inline="javascript">
        /*<![CDATA[*/
        var csrfToken = /*[[@{${_csrf.token}}]]*/ 'null';
        /*]]>*/
    </script>
</head>
<body>
    <h1>月のいいねランキング</h1>

    <!-- 月変更フォーム -->
    <div>
        <form id="month-form" action="/public/ranking" method="get">
            <label for="month">月を選択：</label>
            <input type="number" id="month" name="month" min="1" max="12" value="1">
            <button type="submit">表示</button>
        </form>
    </div>

    <ul id="account-list">
        <th:block th:each="account : ${accounts}">
            <li>
                <img th:src="${account.profileImage}" alt="プロフィール画像" width="50" height="50"/>
                <span th:text="${account.name}">アカウント名</span>
                <button th:attr="data-account-id=${account.id}" onclick="likeAccount(this)">
                   ❤️ いいね (<span id="likes-${account.id}" th:text="${account.likes}">0</span>)
                </button>
            </li>
        </th:block>
    </ul>

    <script>
    function likeAccount(buttonElement) {
        const accountId = buttonElement.getAttribute("data-account-id");
        const url = `/public/ranking/account/${accountId}/like`;

        fetch(url, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'X-CSRF-TOKEN': csrfToken
            }
        })
        .then(response => response.json())
        .then(result => {
            if (result.likes !== undefined) {
                console.log("Like operation successful for account ID:", accountId);
                updateRankingList();
            } else {
                alert("エラーが発生しました。もう一度お試しください。");
            }
        })
        .catch(error => console.error("Error:", error));
    }

    function updateRankingList() {
        const month = document.getElementById("month").value;
        fetch(`/public/ranking/latest?month=${month}`)
        .then(response => response.json())
        .then(accounts => {
            const accountListElement = document.getElementById('account-list');
            accountListElement.innerHTML = ""; // 現在のリストをクリア

            accounts.forEach(account => {
                const listItem = document.createElement("li");

                const img = document.createElement("img");
                img.src = account.profileImage;
                img.alt = "プロフィール画像";
                img.width = 50;
                img.height = 50;

                const nameSpan = document.createElement("span");
                nameSpan.textContent = account.name;

                const likeButton = document.createElement("button");
                likeButton.setAttribute("data-account-id", account.id);
                likeButton.innerHTML = `❤️ いいね (<span id="likes-${account.id}">${account.likes}</span>)`;
                likeButton.onclick = () => likeAccount(likeButton);

                listItem.appendChild(img);
                listItem.appendChild(nameSpan);
                listItem.appendChild(likeButton);
                accountListElement.appendChild(listItem);
            });
        })
        .catch(error => console.error("Error fetching ranking list:", error));
    }
    </script>
</body>
</html>
