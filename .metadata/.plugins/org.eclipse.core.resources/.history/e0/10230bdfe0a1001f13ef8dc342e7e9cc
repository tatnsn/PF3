package com.example.demo.repository.jpa;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;

import com.example.demo.entity.Account;

public interface AccountRepository extends JpaRepository<Account, Long> {

    Optional<Account> findByEmail(String email);

    // 削除されていないアカウントを取得
    List<Account> findByIsDeletedFalse();  

    // 削除されていないアカウントをページング対応で取得
    Page<Account> findByIsDeletedFalse(Pageable pageable);

    // 削除済みアカウントを取得
    List<Account> findByIsDeletedTrue();

    // ROLE_USERのアカウントのみ取得するメソッド
    List<Account> findByIsDeletedFalseAndRole(String role);

    // 月ごとのいいねランキングを取得するクエリ
    @Query("SELECT a FROM Account a WHERE a.isDeleted = false AND a.createdDate BETWEEN :startOfMonth AND :endOfMonth ORDER BY a.likes DESC")
    List<Account> findTopLikedAccountsForMonth(@Param("startOfMonth") LocalDateTime startOfMonth, @Param("endOfMonth") LocalDateTime endOfMonth);

    // 指定期間のいいねランキングを取得するクエリ（年間ランキングなどに使用）
    @Query("SELECT a FROM Account a WHERE a.isDeleted = false AND a.createdDate BETWEEN :startDateTime AND :endDateTime ORDER BY a.likes DESC")
    List<Account> findTopLikedAccountsForPeriod(@Param("startDateTime") LocalDateTime startDateTime, @Param("endDateTime") LocalDateTime endDateTime);
}
