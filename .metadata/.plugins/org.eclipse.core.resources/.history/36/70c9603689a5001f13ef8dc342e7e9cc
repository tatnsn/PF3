<!DOCTYPE html>
<html lang="ja" xmlns:th="http://www.thymeleaf.org">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>一般アカウント紹介一覧</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <meta name="_csrf" th:content="${_csrf.token}"/> <!-- CSRFトークンをメタタグに埋め込む -->
    <style>
        .account-list {
            display: flex;
            flex-wrap: wrap;
            gap: 16px;
            justify-content: center;
        }
        .account-item {
            width: 250px;
            border: 1px solid #ccc;
            border-radius: 8px;
            padding: 16px;
            text-align: center;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            background-color: #fff;
        }
        .account-item img {
            border-radius: 50%;
            width: 80px;
            height: 80px;
            object-fit: cover;
            margin-bottom: 8px;
        }
        .like-button {
            margin-top: 8px;
        }
    </style>
</head>
<body>
    <header class="container text-center my-4">
        <a href="/" class="btn btn-primary">ホームページに戻る</a>
    </header>
    <main class="container">
        <h1 class="text-center mb-4">一般アカウント紹介一覧</h1>
        <div class="text-center mb-4">
            <a th:href="@{/public/ranking(month=${#dates.format(#dates.createNow(), 'MM')})}" class="btn btn-secondary">
                最新月のいいねランキングを見る
            </a>
        </div>
        <div id="accountList" class="account-list">
            <th:block th:each="account : ${accounts}">
                <div class="account-item">
                    <a th:href="@{/public/account/{id}(id=${account.id})}">
                        <img th:src="${account.profileImage}" alt="プロフィール画像"/>
                        <h3 th:text="${account.name}">アカウント名</h3>
                    </a>
                    <button class="btn btn-outline-primary like-button" th:attr="data-account-id=${account.id}" onclick="likeAccount(this)">
                        ❤️ いいね (<span id="likes-${account.id}" th:text="${account.likes}">0</span>)
                    </button>
                </div>
            </th:block>
        </div>
    </main>
    <script>
        // CSRFトークンを取得してグローバルスコープに設定
        document.addEventListener("DOMContentLoaded", function () {
            const metaCsrfToken = document.querySelector('meta[name="_csrf"]');
            if (metaCsrfToken) {
                window.csrfToken = metaCsrfToken.content;
            } else {
                console.error("CSRF token not found!");
            }
        });

        // 非同期いいね処理
        function likeAccount(buttonElement) {
            const accountId = buttonElement.getAttribute("data-account-id");
            const url = `/public/account/${accountId}/like`;

            console.log("Sending request to:", url);

            fetch(url, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-CSRF-TOKEN': window.csrfToken
                }
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.text();
            })
            .then(result => {
                if (result === 'success') {
                    console.log("Like operation successful for account ID:", accountId);
                    const likesElement = document.getElementById(`likes-${accountId}`);
                    if (likesElement) {
                        // ローカルにいいね数を更新
                        const currentLikes = parseInt(likesElement.textContent, 10);
                        likesElement.textContent = currentLikes + 1;
                    }
                } else {
                    alert("エラーが発生しました。もう一度お試しください。");
                }
            })
            .catch(error => console.error("Error:", error));
        }
    </script>
</body>
</html>
